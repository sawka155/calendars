{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Route, Routes, Link, Navigate } from \"react-router-dom\";\nimport { Auths } from './context/auths';\nimport Calendar from \"./pages/Calendar\";\nimport Login from './pages/Login';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  _s();\n\n  const [isAuth, setIsAuth] = useState(false);\n  useEffect(() => {\n    if (localStorage.getItem('login')) {\n      setIsAuth(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(AppRouter, \"t4PKgZRiujzx2FYwcAdbmygk8hU=\");\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["C:/Users/deval/Desktop/JSX/calendar2.0/src/components/AppRouter.jsx"],"names":["React","useEffect","useState","Route","Routes","Link","Navigate","Auths","Calendar","Login","AppRouter","isAuth","setIsAuth","localStorage","getItem"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,QAA9B,QAA8C,kBAA9C;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,KAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AAC/BF,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI,qCADJ;AAGH,CAZD;;GAAMF,S;;KAAAA,S;AAcN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Route, Routes, Link, Navigate } from \"react-router-dom\";\r\nimport { Auths } from './context/auths';\r\nimport Calendar from \"./pages/Calendar\";\r\nimport Login from './pages/Login';\r\nconst AppRouter = () => {\r\n    const [isAuth, setIsAuth] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('login')) {\r\n            setIsAuth(true);\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <></>\r\n    )\r\n}\r\n\r\nexport default AppRouter"]},"metadata":{},"sourceType":"module"}