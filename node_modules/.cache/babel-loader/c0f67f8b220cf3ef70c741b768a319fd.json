{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMonthRows = exports.getMaxEventsVisible = void 0;\n/**\n * Get how many events can fit in one day column in month view\n * @param height\n */\n\nconst getMaxEventsVisible = height => {\n  const baseHeight = parseInt((height / 6 - 22).toString()); // number of events\n\n  const baseFit = (baseHeight - 15) / 17; // number of events with offset top\n\n  const baseFitWithOffset = (baseHeight - 15) / (17 + baseFit);\n  const result = parseInt(baseFitWithOffset.toString());\n  return result;\n};\n\nexports.getMaxEventsVisible = getMaxEventsVisible;\n/**\n * Get row of days in month view\n * @param calendarDays\n */\n\nconst getMonthRows = calendarDays => {\n  const calendarDaysRows = [];\n  let tempArray = [];\n  calendarDays.forEach((item, i) => {\n    const index = i + 1;\n\n    if (index % 7 === 0) {\n      tempArray.push(item); // TODO REMOVE\n\n      calendarDaysRows.push(tempArray);\n      tempArray = [];\n    } else {\n      tempArray.push(item);\n    }\n  });\n  return calendarDaysRows;\n};\n\nexports.getMonthRows = getMonthRows;","map":{"version":3,"sources":["C:/Users/deval/Desktop/JSX/calendar2.0/node_modules/kalend-layout/utils/monthViewHelper.js"],"names":["Object","defineProperty","exports","value","getMonthRows","getMaxEventsVisible","height","baseHeight","parseInt","toString","baseFit","baseFitWithOffset","result","calendarDays","calendarDaysRows","tempArray","forEach","item","i","index","push"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuBF,OAAO,CAACG,mBAAR,GAA8B,KAAK,CAA1D;AACA;AACA;AACA;AACA;;AACA,MAAMA,mBAAmB,GAAIC,MAAD,IAAY;AACpC,QAAMC,UAAU,GAAGC,QAAQ,CAAC,CAACF,MAAM,GAAG,CAAT,GAAa,EAAd,EAAkBG,QAAlB,EAAD,CAA3B,CADoC,CAEpC;;AACA,QAAMC,OAAO,GAAG,CAACH,UAAU,GAAG,EAAd,IAAoB,EAApC,CAHoC,CAIpC;;AACA,QAAMI,iBAAiB,GAAG,CAACJ,UAAU,GAAG,EAAd,KAAqB,KAAKG,OAA1B,CAA1B;AACA,QAAME,MAAM,GAAGJ,QAAQ,CAACG,iBAAiB,CAACF,QAAlB,EAAD,CAAvB;AACA,SAAOG,MAAP;AACH,CARD;;AASAV,OAAO,CAACG,mBAAR,GAA8BA,mBAA9B;AACA;AACA;AACA;AACA;;AACA,MAAMD,YAAY,GAAIS,YAAD,IAAkB;AACnC,QAAMC,gBAAgB,GAAG,EAAzB;AACA,MAAIC,SAAS,GAAG,EAAhB;AACAF,EAAAA,YAAY,CAACG,OAAb,CAAqB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC9B,UAAMC,KAAK,GAAGD,CAAC,GAAG,CAAlB;;AACA,QAAIC,KAAK,GAAG,CAAR,KAAc,CAAlB,EAAqB;AACjBJ,MAAAA,SAAS,CAACK,IAAV,CAAeH,IAAf,EADiB,CACK;;AACtBH,MAAAA,gBAAgB,CAACM,IAAjB,CAAsBL,SAAtB;AACAA,MAAAA,SAAS,GAAG,EAAZ;AACH,KAJD,MAKK;AACDA,MAAAA,SAAS,CAACK,IAAV,CAAeH,IAAf;AACH;AACJ,GAVD;AAWA,SAAOH,gBAAP;AACH,CAfD;;AAgBAZ,OAAO,CAACE,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMonthRows = exports.getMaxEventsVisible = void 0;\n/**\n * Get how many events can fit in one day column in month view\n * @param height\n */\nconst getMaxEventsVisible = (height) => {\n    const baseHeight = parseInt((height / 6 - 22).toString());\n    // number of events\n    const baseFit = (baseHeight - 15) / 17;\n    // number of events with offset top\n    const baseFitWithOffset = (baseHeight - 15) / (17 + baseFit);\n    const result = parseInt(baseFitWithOffset.toString());\n    return result;\n};\nexports.getMaxEventsVisible = getMaxEventsVisible;\n/**\n * Get row of days in month view\n * @param calendarDays\n */\nconst getMonthRows = (calendarDays) => {\n    const calendarDaysRows = [];\n    let tempArray = [];\n    calendarDays.forEach((item, i) => {\n        const index = i + 1;\n        if (index % 7 === 0) {\n            tempArray.push(item); // TODO REMOVE\n            calendarDaysRows.push(tempArray);\n            tempArray = [];\n        }\n        else {\n            tempArray.push(item);\n        }\n    });\n    return calendarDaysRows;\n};\nexports.getMonthRows = getMonthRows;\n"]},"metadata":{},"sourceType":"script"}